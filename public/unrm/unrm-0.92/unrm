# unrm (C) 1999-2001 Octavian Popescu <tiger@hideout.art.ro>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

#!/bin/bash

help()
{
	echo "unrm v0.92"
        echo "Usage: unrm [partition] [-u file_owner] [-s string]"
	echo "Options"
	echo " -u <the owner of the erased file>"
	echo " -s <a string that may have occured in your file>"
	echo
        exit 1;
}

OWNER=0;
STRING=0;

WORK_DIR=`pwd`

MOUNT='/sbin/mount'
DEBUGFS='/sbin/debugfs'


if [ "$UID" != "0" ]
then
	echo "unrm:must be root"
	exit 1;
fi

if [ "$#" -eq 0 ]
then
	help;
fi


if [ -n "$2" ] 
then
	if [ "$2" != "-u" ]
	then
		help;
	fi
	
	if [ -z "$3" ]
	then
		help;
	fi
	
	true=`grep '^[^:]*'$3'' /etc/passwd`
	if [ "$true" = "" ] && [ "$3" != "any" ]
	then
		echo "unrm:user $3 does not exist!"
		exit 1;
	fi
	
	if [ "$3" != "any" ] 
	then
		OWNER=1;
	fi
fi

if [ -n "$4" ]
then
	if [ "$4" != "-s" ]
	then
		help;
	fi
	
        if [ -z "$5" ]
        then
                help;
        fi
	
	_vector=${@##*-s}
	vector=${_vector## }
	STRING=1;
fi
	
trap 'echo;echo Interrupted!;echo -n Cleaning up...;cd $WORK_DIR;rm -rf unrm.recovered;rm .deleted_inodes 2> /dev/null;echo done!;exit 0' INT

echo "unrm v0.92"

echo -n "Looking for debugfs..."
if [ ! -e $DEBUGFS ]
then
	echo "not found!"
	exit 1;
fi
echo "found!"

echo -n "Checking device $1..."
if [ "`echo $1 | grep "-"`" != "" ]
then
	echo "invalid device!"
	exit 1;
fi
 
if [ "`$MOUNT | grep "$1"`" = "" ]
then
	echo "not mounted!"
	exit 1;
fi

ext2_yes=`$MOUNT | grep $1 | grep ext2`
if [ "$ext2_yes" = "" ]
then 
	echo "is not an ext2 file system!"
	exit 1;
fi
echo "ok!"

echo -n "Searching for lost data..."
now=`date|cut -f1-3 -d " "`
$DEBUGFS -R lsdel $1 2> /dev/null | grep "$now" > .deleted_inodes
echo "done!"

if [ -e unrm.recovered ]
then
	echo -n "Removing previous data..."
	rm -rf ./unrm.recovered
	echo "done!"
fi
mkdir unrm.recovered

echo -n "Dumping data into files..."
for i in `cut -c -7 .deleted_inodes` ; do ( $DEBUGFS -R "dump <$i> unrm.recovered/unrm.$i" $1 2> /dev/null); done
echo "done!"

if [ "$OWNER" -eq 1 ]
then
	echo -n "Searching for files owned by $3..."
	true_id=`grep '^[^:]*'$3*'' /etc/passwd | cut -f3 -d ":"`
	cd unrm.recovered
	for iii in `echo ${iii##*.}`
	do
	found_id=`$DEBUGFS -R "stat <$iii>" $1 2> /dev/null | grep "User" | tr -d " " | cut -f2 -d ":" | cut -f1 -d "G"`
	if [ "$true_id" != "$found_id" ]
	then
		rm $iii
	fi
	done
echo "done!"
cd ..
fi	

if [ "$STRING" -eq 1 ]
then
	echo -n "Searching for \"$vector\"..."
	cd unrm.recovered
	for ii in *
	do
		exist=`grep "$vector" $ii`
		if [ "$exist" = "" ]
		then
			rm $ii > /dev/null
		fi
	done
	cd ..
	echo "done!"
fi

rm .deleted_inodes 2> /dev/null
echo "Recovery completed!"
exit 0		 